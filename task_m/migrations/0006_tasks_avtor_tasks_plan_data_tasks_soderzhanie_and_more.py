# Generated by Django 4.1.7 on 2023-03-14 19:30

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("task_m", "0005_alter_projects_time_dedlin_proj_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="tasks",
            name="avtor",
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="tasks",
            name="plan_data",
            field=models.DateTimeField(
                blank=True,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(
                        limit_value=datetime.datetime(
                            2023,
                            3,
                            14,
                            19,
                            30,
                            51,
                            615822,
                            tzinfo=datetime.timezone.utc,
                        )
                    )
                ],
            ),
        ),
        migrations.AddField(
            model_name="tasks",
            name="soderzhanie",
            field=models.TextField(default="Содержание", max_length=1024),
        ),
        migrations.AddField(
            model_name="tasks",
            name="status",
            field=models.CharField(
                choices=[
                    ("NEW", "Novaya"),
                    ("PLANNED", "Planiruemaya"),
                    ("INPROGRESS", "V_rabote"),
                    ("COMPLETED", "Zavershena"),
                ],
                default="Выбрать",
                max_length=15,
            ),
        ),
        migrations.CreateModel(
            name="HistoricalTasks",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("name_task", models.CharField(help_text="Имя задачи", max_length=50)),
                (
                    "soderzhanie",
                    models.TextField(default="Содержание", max_length=1024),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("NEW", "Novaya"),
                            ("PLANNED", "Planiruemaya"),
                            ("INPROGRESS", "V_rabote"),
                            ("COMPLETED", "Zavershena"),
                        ],
                        default="Выбрать",
                        max_length=15,
                    ),
                ),
                (
                    "time_nach_z",
                    models.DateTimeField(
                        blank=True, editable=False, help_text="Время начала"
                    ),
                ),
                (
                    "active_switch",
                    models.BooleanField(
                        default=True,
                        help_text="Статус задачи, снять галочку для завершения, установить для продолжения работ",
                    ),
                ),
                (
                    "status_z",
                    models.CharField(
                        default="В работе",
                        help_text="Статус задачи, комментарий к завершению",
                        max_length=150,
                    ),
                ),
                (
                    "time_zav_z",
                    models.DateTimeField(
                        blank=True, editable=False, help_text="Время завершения"
                    ),
                ),
                (
                    "time_dedlin_task",
                    models.DateTimeField(help_text="Время на исполнение задачи"),
                ),
                (
                    "plan_data",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=datetime.datetime(
                                    2023,
                                    3,
                                    14,
                                    19,
                                    30,
                                    51,
                                    615822,
                                    tzinfo=datetime.timezone.utc,
                                )
                            )
                        ],
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical tasks",
                "verbose_name_plural": "historical taskss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
